" Use Vim settings, rather than Vi settings (much better!).
" This must be first, because it changes other options as a side effect.
set nocompatible

" Run pathogen, to load all other plugins.
runtime bundle/vim-pathogen/autoload/pathogen.vim

" allow backspacing over everything in insert mode
set backspace=indent,eol,start

" do not keep a backup file, use versions instead
set nobackup

" keep 50 lines of command line history
set history=10000		
" show the cursor position all the time
set ruler		    
" display incomplete commands
set showcmd		
" do incremental searching
set incsearch		

"Enable mouse
if has('mouse')
  set mouse=a
endif

" Enable syntax highlighting
syntax on
"Show lastest search patternz
set hlsearch

" Always turn on auto indent
filetype plugin indent on
set autoindent		

" For all text files set 'textwidth' to 78 characters.
autocmd FileType text setlocal textwidth=78

autocmd BufReadPost *
  \ if line("'\"") > 1 && line("'\"") <= line("$") |
  \   exe "normal! g`\"" |
  \ endif

endif " has("autocmd")

"Set linenumbers on
set number

"Remove ugly GUI from MacVim
if has("gui_running")
    set guioptions=egmrt
endif

"Remove the intro splash screen
set shortmess+=I

"Setting leader key
let mapleader=","

"Set default font
set guifont=Monaco:h14

"Set tab size
set cindent
set tabstop=2
set shiftwidth=2

"Do not use tabs
set expandtab

"Set backup files folder
set backupdir=~/.vimbackup
set directory=~/.vimbackup

"improve autocomplete menu color
highlight Pmenu ctermbg=238 gui=bold

"Remove swapfile
command R call RemoveSwap()

function! RemoveSwap()
    let a=expand("%:r")
    execute "!rm ~/.vimbackup/".a.".swp"
endfunction

"NerdTree mapping
map <Space> :NERDTreeToggle<CR>
let NERDTreeQuitOnOpen = 1

"Remove sounds
set visualbell

"Lang comp
command W w|call CompileAndRun()

function! CompileAndRun()
    if &filetype == 'fsharp'
      call Fsharp()
    endif
    if &filetype == 'cs'
      call Csharp()
    endif
    if &filetype == 'coffee'
      execute "!cake build"
    endif
    if &filetype == 'c'
      execute "!make"
      execute "!./fifo 5 5 5 50"
    endif
    if &filetype == 'cuda'
      call CudaC()
    endif
endfunction

function! CudaC()
    execute "!make"
    execute "!make run"
endfunction

function! Fsharp()
    !fsc %
    let a=expand("%:t:r")
    execute "!mono ".a.".exe"
endfunction

function! Csharp()
    !mcs %
    let a=expand("%:r")
    execute "!mono ".a.".exe"
endfunction

" Remap VIM 0 to first non-blank character
map 0 ^

" Treat long lines as break lines
map j gj
map k gk

"testing wildmenu
set wildmenu
set wildmode=list:longest,full

" Return to last edit position when opening files (You want this!)
" autocmd BufReadPost *
     \ if line("'\"") > 0 && line("'\"") <= line("$") |
     \   exe "normal! g`\"" |
     \ endif
" Remember info about open buffers on close
 set viminfo^=%

" Always show the status line
 set laststatus=2

" Pressing ,ss will toggle and untoggle spell checking
map <leader>ss :setlocal spell!<cr>

" Makes search act like search in modern browsers
set incsearch

" No annoying sound on errors
set noerrorbells
set novisualbell
set t_vb=
set tm=500

"Color scheme
:set background=dark
:color my-desert

"Insert filename
inoremap <C-G> <C-R>=expand("%:t:r")<CR>

"TMUX VIM TRY COPY PASTE
set clipboard=unnamedplus
nnoremap yy yy"+yy
vnoremap y ygv"+y

"Filetype recognize
au BufNewFile,BufRead *.hu setlocal ft=c

"Multipurpose tab key
function! InsertTabWrapper()
    let col = col('.') - 1
    if !col || getline('.')[col - 1] !~ '\k'
        return "\<tab>"
    else
        return "\<c-n>"
    endif
endfunction
inoremap <tab> <c-r>=InsertTabWrapper()<cr>
inoremap <s-tab> <c-n>

" highlight current line
set cursorline
hi CursorLine term=bold ctermbg=236 cterm=bold guibg=Grey40

" Scrolloff
set scrolloff=3
